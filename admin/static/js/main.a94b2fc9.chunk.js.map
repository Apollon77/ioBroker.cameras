{"version":3,"sources":["Tabs/Options.js","Types/URLImage.js","Types/URLBasicAuthImage.js","Tabs/Cameras.js","App.js","serviceWorker.js","index.js"],"names":["Options","Component","constructor","props","super","this","state","showHint","toast","ips","requesting","getIpAddresses","then","setState","showError","text","errorText","renderError","title","I18n","t","onClose","renderToast","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","ContentProps","message","id","action","IconButton","key","aria-label","color","className","classes","close","onClick","renderHint","renderSettings","length","FormControl","bind","InputLabel","Select","disabled","value","native","onChange","e","target","map","ip","MenuItem","address","name","TextField","label","type","min","max","port","defaultTimeout","renderMessage","messageText","checkConnection","socket","sendTo","adapterName","instance","data","error","result","render","tab","common","onError","onLoad","withStyles","theme","width","minHeight","marginRight","marginBottom","minWidth","Config","JSON","parse","stringify","settings","page","url","password","username","componentDidMount","decrypt","reportSettings","encrypt","autoComplete","TYPES","urlBasicAuth","COMMON_ATTRS","Server","editCam","editChanged","Object","keys","forEach","translated","encode","decode","renderConfigDialog","cam","cameras","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","editedSettings","editedSettingsOld","cb","DialogActions","Button","oldValue","attr","renderCamera","i","find","c","ii","lineDiv","lineText","helperText","replace","lineDesc","desc","lineType","Fab","size","lineUp","splice","lineNoButtonUp","lineDown","lineNoButtonDown","lineEdit","console","log","lineDelete","push","height","paddingBottom","borderBottom","display","marginLeft","marginTop","App","GenericApp","extendedProps","translations","require","onConnectionReady","setTimeout","updateNativeValue","Math","round","random","toFixed","getSelectedTab","selectedTab","loaded","AppBar","position","Tabs","index","selectTab","parentNode","dataset","Tab","selected","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","onConfigError","configError","setConfigurationError","renderSaveCloseButtons","themeType","root","padding","overflow","Boolean","window","location","hostname","match","build","ReactDOM","createTheme","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a94b2fc9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogError from \"@iobroker/adapter-react/Dialogs/Error\";\r\n\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    bind: {\r\n        marginRight: 10,\r\n        marginBottom: 20,\r\n        minWidth: 200,\r\n    },\r\n    port: {\r\n        width: 100\r\n    },\r\n    defaultTimeout: {\r\n        width: 150\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showHint: false,\r\n            toast: '',\r\n            ips: [],\r\n            requesting: true,\r\n        };\r\n\r\n        this.props.getIpAddresses()\r\n            .then(ips => this.setState({requesting: false, ips}));\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        }\r\n        return (<DialogError text={this.state.errorText} title={I18n.t('Error')} onClose={() => this.setState({errorText: ''})}/>);\r\n    }\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    renderHint() {\r\n        if (this.state.showHint) {\r\n            return (<Message text={I18n.t('Click now Get new connection certificates to request new temporary password')} onClose={() => this.setState({showHint: false})}/>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderSettings() {\r\n        return [\r\n            this.state.ips && this.state.ips.length ?\r\n                (<FormControl key=\"bindSelect\"  className={this.props.classes.bind}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\r\n                    <Select\r\n                         disabled={this.state.requesting}\r\n                         value={this.props.native.bind}\r\n                         onChange={e => this.props.onChange('bind', e.target.value)}\r\n                    >{this.state.ips.map(ip => (<MenuItem value={ip.address}>{ip.name}</MenuItem>))}</Select></FormControl>) :\r\n                (<TextField\r\n                    disabled={this.state.requesting}\r\n                    key=\"bind\"\r\n                    className={this.props.classes.bind}\r\n                    label={I18n.t('Local IP address')}\r\n                    value={this.props.native.bind}\r\n                    onChange={e => this.props.onChange('bind', e.target.value)}\r\n                />),\r\n            (<TextField\r\n                disabled={this.state.requesting}\r\n                key=\"port\"\r\n                type=\"number\"\r\n                min={1}\r\n                max={0xFFFF}\r\n                className={this.props.classes.port}\r\n                label={I18n.t('Local port')}\r\n                value={this.props.native.port}\r\n                onChange={e => this.props.onChange('port', e.target.value)}\r\n            />),\r\n            (<br key=\"br1\"/>),\r\n            (<TextField\r\n                disabled={this.state.requesting}\r\n                key=\"defaultTimeout\"\r\n                type=\"number\"\r\n                min={0}\r\n                max={10000}\r\n                className={this.props.classes.defaultTimeout}\r\n                label={I18n.t('Default timeout (ms)')}\r\n                value={this.props.native.defaultTimeout}\r\n                onChange={e => this.props.onChange('defaultTimeout', e.target.value)}\r\n            />),\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return (<DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>)\r\n    }\r\n\r\n    checkConnection() {\r\n        this.setState({requesting: true}, () =>\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'test', this.props.native, data => {\r\n                if (data.error) {\r\n                    this.setState({requesting: false}, () => this.showError(I18n.t(data.error)));\r\n                } else {\r\n                    this.setState({messageText: data.result, requesting: false});\r\n                }\r\n            }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <Logo\r\n                    instance={this.props.instance}\r\n                    common={this.props.common}\r\n                    native={this.props.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    onLoad={this.props.onLoad}\r\n                />\r\n                {this.renderSettings()}<br/>\r\n                {this.renderHint()}\r\n                {this.renderToast()}\r\n                {this.renderMessage()}\r\n                {this.renderError()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onConfigError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    getIpAddresses: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    page: {\r\n\r\n    },\r\n    url: {\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nclass Config extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const state = JSON.parse(JSON.stringify(this.props.settings));\r\n\r\n        this.state = state;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.classes.page}>\r\n                <TextField\r\n                    key=\"url\"\r\n                    className={this.props.classes.url}\r\n                    label={I18n.t('Camera URL')}\r\n                    value={this.state.url}\r\n                    onChange={e => {\r\n                        this.setState({url: e.target.value}, () =>\r\n                            this.props.onChange({\r\n                                url: this.state.url\r\n                            }));\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nConfig.propTypes = {\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(Config);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    page: {\r\n\r\n    },\r\n    url: {\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nclass Config extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const state = JSON.parse(JSON.stringify(this.props.settings));\r\n        state.password = state.password || '';\r\n        state.username = state.username || '';\r\n\r\n        this.state = state;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.decrypt(this.state.password,\r\n            password => this.setState({password}));\r\n    }\r\n\r\n    reportSettings() {\r\n        this.props.encrypt(this.state.password, password => {\r\n            this.props.onChange({\r\n                url:      this.state.url,\r\n                username: this.state.username,\r\n                password: password\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.classes.page}>\r\n                <TextField\r\n                    key=\"url\"\r\n                    className={this.props.classes.url}\r\n                    label={I18n.t('Camera URL')}\r\n                    value={this.state.url}\r\n                    onChange={e => this.setState({url: e.target.value}, () => this.reportSettings())}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    key=\"username\"\r\n                    autoComplete=\"off\"\r\n                    className={this.props.classes.username}\r\n                    label={I18n.t('Username')}\r\n                    value={this.state.username}\r\n                    onChange={e => this.setState({username: e.target.value}, () => this.reportSettings())}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    key=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    className={this.props.classes.password}\r\n                    label={I18n.t('Password')}\r\n                    value={this.state.password}\r\n                    onChange={e => this.setState({password: e.target.value}, () => this.reportSettings())}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nConfig.propTypes = {\r\n    onChange: PropTypes.func,\r\n    decode: PropTypes.func,\r\n    encode: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(Config);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport IconDelete from '@material-ui/icons/Delete';\r\nimport IconEdit from '@material-ui/icons/Edit';\r\nimport IconAdd from '@material-ui/icons/Add';\r\nimport IconUp from '@material-ui/icons/ArrowUpward';\r\nimport IconDown from '@material-ui/icons/ArrowDownward';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport URLImage from '../Types/URLImage';\r\nimport URLBasicAuthImage from '../Types/URLBasicAuthImage';\r\n\r\nconst TYPES = {\r\n    url:          {Config: URLImage, name: 'URL'},\r\n    urlBasicAuth: {Config: URLBasicAuthImage, name: 'URL with basic auth'},\r\n};\r\n\r\nconst COMMON_ATTRS = ['name', 'desc', 'type'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    lineDiv: {\r\n        width: '100%',\r\n        paddingBottom: 5,\r\n        borderBottom: '1px dashed gray'\r\n    },\r\n    lineText: {\r\n        display: 'inline-block',\r\n        width: 200,\r\n    },\r\n    lineDesc: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 600px)',\r\n    },\r\n    lineType: {\r\n        display: 'inline-block',\r\n        width: 200,\r\n    },\r\n    lineEdit: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    lineUp: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    lineDown: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    lineDelete: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    type: {\r\n        width: '100%'\r\n    },\r\n    name:  {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    desc:  {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    lineNoButtonUp:  {\r\n        display: 'inline-block',\r\n        width: 40,\r\n        marginLeft: 10,\r\n    },\r\n    lineNoButtonDown:  {\r\n        display: 'inline-block',\r\n        width: 40,\r\n        marginLeft: 10,\r\n    },});\r\n\r\nclass Server extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editCam: false,\r\n            editChanged: false,\r\n        };\r\n\r\n        // translate all names once\r\n        Object.keys(TYPES).forEach(type => {\r\n            if (TYPES[type].name && !TYPES[type].translated) {\r\n                TYPES[type].translated = true;\r\n                TYPES[type].name = I18n.t(TYPES[type].name);\r\n            }\r\n        });\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    encode(value) {\r\n        return value;\r\n    }\r\n\r\n    decode(value) {\r\n        return value;\r\n    }\r\n\r\n    renderConfigDialog() {\r\n        if (this.state.editCam !== false) {\r\n            const cam = this.props.native.cameras[this.state.editCam];\r\n            let Config = (TYPES[cam.type] || TYPES.url).Config;\r\n\r\n            return (<Dialog\r\n                maxWidth=\"lg\"\r\n                fullWidth={true}\r\n                open={true}\r\n                onClose={() => this.state.editCam !== null && this.setState({editCam: false, editChanged: false})}\r\n            >\r\n                <DialogTitle>{I18n.t('Edit camera %s [%s]', cam.name, cam.type)}</DialogTitle>\r\n                <DialogContent><Config\r\n                    settings={cam}\r\n                    onChange={settings => {\r\n                        this.editedSettings = JSON.stringify(settings);\r\n                        if (this.editedSettingsOld === this.editedSettings && this.state.editChanged) {\r\n                            this.setState({editChanged: false});\r\n                        } else if (this.editedSettingsOld !== this.editedSettings && !this.state.editChanged) {\r\n                            this.setState({editChanged: true});\r\n                        }\r\n                    }}\r\n                    encrypt={(value, cb) =>\r\n                        this.props.encrypt(value, cb)}\r\n                    decrypt={(value, cb) =>\r\n                        this.props.decrypt(value, cb)}\r\n                /></DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        disabled={!this.state.editChanged}\r\n                        onClick={() => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        if (this.editedSettings) {\r\n                            const oldValue = cameras[this.state.editCam];\r\n                            cameras[this.state.editCam] = JSON.parse(this.editedSettings);\r\n                            COMMON_ATTRS.forEach(attr => cameras[this.state.editCam][attr] = oldValue[attr]);\r\n                            this.props.onChange('cameras', cameras, () => this.setState({editCam: false, editChanged: false}));\r\n                        } else {\r\n                            this.setState({editCam: false, editChanged: false});\r\n                        }\r\n                    }} color=\"primary\" >{I18n.t('Apply')}</Button>\r\n                    <Button onClick={() => this.setState({editCam: false, editChanged: false})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderCamera(cam, i) {\r\n        const error = this.props.native.cameras.find((c, ii) => c.name === cam.name && ii !== i);\r\n        return (<div key={'cam' + i} className={this.props.classes.lineDiv}>\r\n            <div className={this.props.classes.lineText}>\r\n                <TextField\r\n                    className={this.props.classes.name}\r\n                    label={I18n.t('Name')}\r\n                    error={error}\r\n                    value={cam.name}\r\n                    helperText={error ? I18n.t('Duplicate name') : ''}\r\n                    onChange={e => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        cameras[i].name = e.target.value.replace(/[^-_\\da-zA-Z]/g, '_');\r\n                        this.props.onChange('cameras', cameras);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={this.props.classes.lineDesc}>\r\n                <TextField\r\n                    className={this.props.classes.desc}\r\n                    label={I18n.t('Description')}\r\n                    value={cam.desc}\r\n                    onChange={e => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        cameras[i].desc = e.target.value;\r\n                        this.props.onChange('cameras', cameras);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={this.props.classes.lineType}>\r\n                <FormControl className={this.props.classes.type}>\r\n                    <InputLabel>{I18n.t('Type')}</InputLabel>\r\n                    <Select\r\n                        value={cam.type}\r\n                        onChange={e => {\r\n                            const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                            cameras[i].type = e.target.value;\r\n                            this.props.onChange('cameras', cameras);\r\n                        }}\r\n                    >\r\n                        {Object.keys(TYPES).map(type => (<MenuItem value={type}>{TYPES[type].name || type}</MenuItem>))}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            {i ? (<Fab size=\"small\" className={this.props.classes.lineUp} onClick={() => {\r\n                const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                const cam = cameras[i];\r\n                cameras.splice(i, 1);\r\n                cameras.splice(i - 1, 0, cam);\r\n                this.props.onChange('cameras', cameras);\r\n            }}><IconUp /></Fab>) : (<div className={this.props.classes.lineNoButtonUp}>&nbsp;</div>)}\r\n            {i !== this.props.native.cameras.length - 1 ? (<Fab size=\"small\" className={this.props.classes.lineDown} onClick={() => {\r\n                const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                const cam = cameras[i];\r\n                cameras.splice(i, 1);\r\n                cameras.splice(i + 1, 0, cam);\r\n                this.props.onChange('cameras', cameras);\r\n            }}><IconDown /></Fab>) : (<div className={this.props.classes.lineNoButtonDown}>&nbsp;</div>)}\r\n            <Fab size=\"small\" className={this.props.classes.lineEdit} onClick={() => {\r\n                this.editedSettingsOld = JSON.parse(JSON.stringify(this.props.native.cameras[i]));\r\n                COMMON_ATTRS.forEach(attr => {\r\n                    console.log('delete ' + attr);\r\n                    delete this.editedSettingsOld[attr];\r\n                });\r\n                this.editedSettingsOld = JSON.stringify(this.editedSettingsOld);\r\n                this.setState({editCam: i});\r\n            }}><IconEdit /></Fab>\r\n            <Fab size=\"small\" className={this.props.classes.lineDelete} onClick={() => {\r\n                const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                cameras.splice(i, 1);\r\n                this.props.onChange('cameras', cameras);\r\n            }}><IconDelete /></Fab>\r\n        </div>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.classes.tab}>\r\n                <Fab size=\"small\" onClick={() => {\r\n                    const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                    let i = 1;\r\n                    while(cameras.find(cam => cam.name === 'cam' + i)) i++;\r\n                    cameras.push({name: 'cam' + i, type: 'url'});\r\n                    this.props.onChange('cameras', cameras);\r\n                }}><IconAdd /></Fab>\r\n                {this.props.native.cameras ? this.props.native.cameras.map((cam, i) => this.renderCamera(cam, i)) : null}\r\n                {this.renderConfigDialog()}\r\n                {this.renderMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nServer.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    decrypt: PropTypes.func.isRequired,\r\n    encrypt: PropTypes.func.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Server);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabCameras from './Tabs/Cameras';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {};\r\n        extendedProps.encryptedFields = ['password'];\r\n        extendedProps.adapterName = 'cameras';\r\n        extendedProps.doNotLoadAllObjects = true;\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    // called when connected with admin and loaded instance object\r\n    onConnectionReady() {\r\n        // generate random key\r\n        if (!this.state.native.key) {\r\n            setTimeout(() => this.updateNativeValue('key', (Math.round(Math.random() * 100000000000) / 100000).toFixed(6)));\r\n        }\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'cameras') {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return (<Loader theme={this.state.themeType}/>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                        <Tab selected={this.state.selectedTab === 'options'} label={I18n.t('Options')} data-name=\"options\" />\r\n                        <Tab selected={this.state.selectedTab === 'cameras'} label={I18n.t('Cameras')} data-name=\"cameras\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\r\n                        key=\"options\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        encrypt={(value, cb) => cb(this.encrypt(value))}\r\n                        decrypt={(value, cb) => cb(this.decrypt(value))}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        onLoad={native => this.onLoadConfig(native)}\r\n                        instance={this.instance}\r\n                        getIpAddresses={() => this.getIpAddresses()}\r\n                        onConfigError={configError => this.setConfigurationError(configError)}\r\n                        adapterName={this.adapterName}\r\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    />)}\r\n                    {this.state.selectedTab === 'cameras' && (<TabCameras\r\n                        key=\"cameras\"\r\n                        encrypt={(value, cb) => cb(this.encrypt(value))}\r\n                        decrypt={(value, cb) => cb(this.decrypt(value))}\r\n                        native={this.state.native}\r\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    />)}\r\n                </div>\r\n                {this.renderError()}\r\n                {this.renderSaveCloseButtons()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createTheme from '@iobroker/adapter-react/createTheme';\n\nlet theme = 'light';\n\nfunction printPrompt() {\n    const prompt = `\n██╗ ██████╗ ██████╗ ██████╗  ██████╗ ██╗  ██╗███████╗██████╗ \n██║██╔═══██╗██╔══██╗██╔══██╗██╔═══██╗██║ ██╔╝██╔════╝██╔══██╗\n██║██║   ██║██████╔╝██████╔╝██║   ██║█████╔╝ █████╗  ██████╔╝\n██║██║   ██║██╔══██╗██╔══██╗██║   ██║██╔═██╗ ██╔══╝  ██╔══██╗\n██║╚██████╔╝██████╔╝██║  ██║╚██████╔╝██║  ██╗███████╗██║  ██║\n╚═╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝\n`;\n    console.log(prompt);\n    console.log('Nice to see you here! :) Join our dev community here https://github.com/ioBroker/ioBroker or here https://github.com/iobroker-community-adapters');\n    console.log('Help us to create open source project with reactJS!');\n    console.log('See you :)');\n}\n\nfunction build() {\n    printPrompt();\n    return ReactDOM.render(<MuiThemeProvider theme={createTheme(theme)}>\n        <App onThemeChange={_theme => {\n            theme = _theme;\n            build();\n        }}/>\n    </MuiThemeProvider>, document.getElementById('root'));\n}\n\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}