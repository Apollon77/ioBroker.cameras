{"version":3,"sources":["Tabs/Options.js","Types/URLImage.js","Types/URLBasicAuthImage.js","Tabs/Cameras.js","App.js","serviceWorker.js","index.js"],"names":["Options","props","ips","state","showHint","toast","requesting","webInstances","getIpAddresses","then","_ips","getExtendableInstances","setState","map","item","_id","replace","text","this","errorText","title","I18n","t","onClose","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","ContentProps","message","id","action","IconButton","key","aria-label","color","className","classes","close","onClick","length","FormControl","bind","InputLabel","Select","disabled","value","native","onChange","e","target","ip","MenuItem","address","name","TextField","label","type","min","max","port","defaultTimeout","instance","messageText","socket","sendTo","adapterName","data","error","showError","result","tab","common","onError","onLoad","renderSettings","renderHint","renderToast","renderMessage","renderError","Component","withStyles","theme","width","minHeight","marginRight","marginBottom","minWidth","Config","JSON","parse","stringify","settings","url","page","password","username","timeout","decrypt","encrypt","reportSettings","autoComplete","TYPES","URLImage","urlBasicAuth","COMMON_ATTRS","Server","editCam","editChanged","instanceAlive","webInstanceHost","Object","keys","forEach","translated","getWebInstances","getAdapterInstances","list","webInstance","find","endsWith","window","location","hostname","editedSettings","editedSettingsOld","attr","cameras","setTimeout","clearTimeout","body","testImg","cam","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","divConfig","cb","sampleUrl","href","rel","divTestCam","Button","variant","size","buttonTest","onTest","startIcon","alt","imgTest","src","DialogActions","oldValue","i","Fab","lineEdit","console","log","buttonIcon","lineUp","splice","lineNoButtonUp","lineDown","lineNoButtonDown","lineDelete","c","ii","Date","now","description","m","match","lineDiv","lineText","helperText","lineDesc","desc","lineType","renderCameraButtons","lineUrl","push","renderCamera","renderConfigDialog","height","paddingBottom","borderBottom","display","marginLeft","marginTop","opacity","fontSize","fontStyle","verticalAlign","spacing","App","extendedProps","translations","require","subscribeState","instanceId","alive","val","getState","updateNativeValue","Math","round","random","toFixed","selectedTab","loaded","AppBar","position","Tabs","getSelectedTab","index","selectTab","parentNode","dataset","Tab","selected","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","onConfigError","configError","setConfigurationError","renderSaveCloseButtons","themeType","GenericApp","root","padding","overflow","Boolean","build","ReactDOM","render","createTheme","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4ad4ed9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogError from \"@iobroker/adapter-react/Dialogs/Error\";\r\n\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    bind: {\r\n        marginRight: 10,\r\n        marginBottom: 20,\r\n        minWidth: 200,\r\n    },\r\n    port: {\r\n        width: 100\r\n    },\r\n    defaultTimeout: {\r\n        width: 150\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showHint: false,\r\n            toast: '',\r\n            ips: [],\r\n            requesting: true,\r\n            webInstances: []\r\n        };\r\n\r\n        let ips;\r\n        this.props.getIpAddresses()\r\n            .then(_ips => ips = _ips)\r\n            .then(() => this.props.getExtendableInstances())\r\n            .then(webInstances => this.setState({requesting: false, ips, webInstances: webInstances.map(item => item._id.replace('system.adapter.', ''))}));\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        }\r\n        return (<DialogError text={this.state.errorText} title={I18n.t('Error')} onClose={() => this.setState({errorText: ''})}/>);\r\n    }\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    renderHint() {\r\n        if (this.state.showHint) {\r\n            return (<Message text={I18n.t('Click now Get new connection certificates to request new temporary password')} onClose={() => this.setState({showHint: false})}/>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderSettings() {\r\n        return [\r\n            this.state.ips && this.state.ips.length ?\r\n                (<FormControl key=\"bindSelect\"  className={this.props.classes.bind}>\r\n                    <InputLabel>{ I18n.t('Local IP address') }</InputLabel>\r\n                    <Select\r\n                         disabled={ this.state.requesting }\r\n                         value={ this.props.native.bind }\r\n                         onChange={ e => this.props.onChange('bind', e.target.value) }\r\n                    >{ this.state.ips.map(ip => (<MenuItem value={ ip.address }>{ ip.name }</MenuItem>)) }</Select></FormControl>) :\r\n                (<TextField\r\n                    disabled={this.state.requesting}\r\n                    key=\"bind\"\r\n                    className={this.props.classes.bind}\r\n                    label={I18n.t('Local IP address')}\r\n                    value={this.props.native.bind}\r\n                    onChange={e => this.props.onChange('bind', e.target.value)}\r\n                />),\r\n            (<TextField\r\n                disabled={this.state.requesting}\r\n                key=\"port\"\r\n                type=\"number\"\r\n                min={1}\r\n                max={0xFFFF}\r\n                className={this.props.classes.port}\r\n                label={I18n.t('Local port')}\r\n                value={this.props.native.port}\r\n                onChange={e => this.props.onChange('port', e.target.value)}\r\n            />),\r\n            (<br key=\"br1\"/>),\r\n            (<TextField\r\n                disabled={this.state.requesting}\r\n                key=\"defaultTimeout\"\r\n                type=\"number\"\r\n                min={0}\r\n                max={10000}\r\n                className={this.props.classes.defaultTimeout}\r\n                label={I18n.t('Default timeout (ms)')}\r\n                value={this.props.native.defaultTimeout}\r\n                onChange={e => this.props.onChange('defaultTimeout', e.target.value)}\r\n            />),\r\n            (<br key=\"br2\"/>),\r\n            (<FormControl key=\"webInstanceSelect\"  className={this.props.classes.bind}>\r\n                <InputLabel>{I18n.t('WEB Instance')}</InputLabel>\r\n                <Select\r\n                    disabled={this.state.requesting}\r\n                    value={this.props.native.bind}\r\n                    onChange={e => this.props.onChange('bind', e.target.value)}\r\n                >\r\n                    <MenuItem value=\"*\">{I18n.t('All')}</MenuItem>\r\n                    {this.state.webInstances ? this.state.webInstances.map(instance => (<MenuItem value={instance}>{instance}</MenuItem>)) : null}\r\n                </Select></FormControl>)\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return (<DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>)\r\n    }\r\n\r\n    checkConnection() {\r\n        this.setState({requesting: true}, () =>\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'test', this.props.native, data => {\r\n                if (data.error) {\r\n                    this.setState({requesting: false}, () => this.showError(I18n.t(data.error)));\r\n                } else {\r\n                    this.setState({messageText: data.result, requesting: false});\r\n                }\r\n            }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={ this.props.classes.tab }>\r\n                <Logo\r\n                    instance={ this.props.instance }\r\n                    common={ this.props.common }\r\n                    native={ this.props.native }\r\n                    onError={text => this.setState({errorText: text}) }\r\n                    onLoad={ this.props.onLoad }\r\n                />\r\n                { this.renderSettings() }<br/>\r\n                { this.renderHint() }\r\n                { this.renderToast() }\r\n                { this.renderMessage() }\r\n                { this.renderError() }\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onConfigError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    getIpAddresses: PropTypes.func,\r\n    getExtendableInstances: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    page: {\r\n        width: '100%'\r\n    },\r\n    url: {\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nclass Config extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const state = JSON.parse(JSON.stringify(this.props.settings));\r\n        // set default values\r\n        state.url      = state.url || '';\r\n\r\n        this.state = state;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.classes.page}>\r\n                <TextField\r\n                    key=\"url\"\r\n                    className={this.props.classes.url}\r\n                    label={I18n.t('Camera URL')}\r\n                    value={this.state.url}\r\n                    onChange={e => {\r\n                        this.setState({url: e.target.value}, () =>\r\n                            this.props.onChange({\r\n                                url: this.state.url\r\n                            }));\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nConfig.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    defaultTimeout: PropTypes.number,\r\n    settings: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Config);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    page: {\r\n        width: '100%'\r\n    },\r\n    url: {\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nclass Config extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const state = JSON.parse(JSON.stringify(this.props.settings));\r\n\r\n        // set default values\r\n        state.url      = state.url || '';\r\n        state.password = state.password || '';\r\n        state.username = state.username || '';\r\n        state.timeout  = state.timeout  || 1000;\r\n\r\n        this.state = state;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.decrypt(this.state.password,\r\n            password => this.setState({password}));\r\n    }\r\n\r\n    reportSettings() {\r\n        this.props.encrypt(this.state.password, password => {\r\n            this.props.onChange({\r\n                url:      this.state.url,\r\n                username: this.state.username,\r\n                password: password\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.classes.page}>\r\n                <TextField\r\n                    key=\"url\"\r\n                    className={this.props.classes.url}\r\n                    label={I18n.t('Camera URL')}\r\n                    value={this.state.url}\r\n                    onChange={e => this.setState({url: e.target.value}, () => this.reportSettings())}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    key=\"username\"\r\n                    autoComplete=\"off\"\r\n                    className={this.props.classes.username}\r\n                    label={I18n.t('Username')}\r\n                    value={this.state.username}\r\n                    onChange={e => this.setState({username: e.target.value}, () => this.reportSettings())}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    key=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    className={this.props.classes.password}\r\n                    label={I18n.t('Password')}\r\n                    value={this.state.password}\r\n                    onChange={e => this.setState({password: e.target.value}, () => this.reportSettings())}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nConfig.propTypes = {\r\n    onChange: PropTypes.func,\r\n    defaultTimeout: PropTypes.number,\r\n    decode: PropTypes.func,\r\n    encode: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(Config);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport MessageDialog from '@iobroker/adapter-react/Dialogs/Message';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport IconDelete from '@material-ui/icons/Delete';\r\nimport IconEdit from '@material-ui/icons/Edit';\r\nimport IconAdd from '@material-ui/icons/Add';\r\nimport IconUp from '@material-ui/icons/ArrowUpward';\r\nimport IconDown from '@material-ui/icons/ArrowDownward';\r\nimport IconTest from '@material-ui/icons/Camera';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport URLImage from '../Types/URLImage';\r\nimport URLBasicAuthImage from '../Types/URLBasicAuthImage';\r\n\r\nconst TYPES = {\r\n    url:          {Config: URLImage, name: 'URL'},\r\n    urlBasicAuth: {Config: URLBasicAuthImage, name: 'URL with basic auth'},\r\n};\r\n\r\nconst COMMON_ATTRS = ['name', 'desc', 'type'];\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    lineDiv: {\r\n        width: '100%',\r\n        paddingBottom: 5,\r\n        borderBottom: '1px dashed gray'\r\n    },\r\n    lineText: {\r\n        display: 'inline-block',\r\n        width: 200,\r\n    },\r\n    lineDesc: {\r\n        display: 'inline-block',\r\n        width: 'calc(100% - 600px)',\r\n    },\r\n    lineType: {\r\n        display: 'inline-block',\r\n        width: 200,\r\n    },\r\n    lineEdit: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    lineUp: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    lineDown: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    lineDelete: {\r\n        display: 'inline-block',\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n    },\r\n    lineUrl: {\r\n        marginLeft: 200,\r\n        opacity: 0.5,\r\n        fontSize: 'small',\r\n        fontStyle: 'italic',\r\n    },\r\n    type: {\r\n        width: '100%'\r\n    },\r\n    name: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    desc: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    lineNoButtonUp: {\r\n        display: 'inline-block',\r\n        width: 40,\r\n        marginLeft: 10,\r\n    },\r\n    lineNoButtonDown: {\r\n        display: 'inline-block',\r\n        width: 40,\r\n        marginLeft: 10,\r\n    },\r\n    divConfig: {\r\n        verticalAlign: 'top',\r\n        width: 'calc(100% - 300px)',\r\n        display: 'inline-block'\r\n    },\r\n    divTestCam: {\r\n        width: 300,\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n    },\r\n    buttonIcon: {\r\n        marginTop: 6,\r\n    },\r\n    buttonTest: {},\r\n    imgTest: {\r\n        width: '100%',\r\n        height: 'auto'\r\n    },\r\n    sampleUrl: {\r\n        display: 'block',\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nclass Server extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editCam: false,\r\n            editChanged: false,\r\n            requesting: false,\r\n            instanceAlive: this.props.instanceAlive,\r\n            webInstanceHost: ''\r\n        };\r\n\r\n        // translate all names once\r\n        Object.keys(TYPES).forEach(type => {\r\n            if (TYPES[type].name && !TYPES[type].translated) {\r\n                TYPES[type].translated = true;\r\n                TYPES[type].name = I18n.t(TYPES[type].name);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getWebInstances();\r\n    }\r\n\r\n    getWebInstances() {\r\n        this.props.socket.getAdapterInstances('web')\r\n            .then(list => {\r\n                let webInstance = null;\r\n                if (this.props.native.webInstance === '*') {\r\n                    webInstance = list[Object.keys(list)[0]];\r\n                } else {\r\n                    const id = Object.keys(list).find(id => id.endsWith(this.props.native.webInstance));\r\n                    webInstance = list[id];\r\n                }\r\n                if (webInstance) {\r\n                    webInstance.native = webInstance.native || {};\r\n                }\r\n                if (!webInstance.native.bind || webInstance.native.bind === '0.0.0.0') {\r\n                    // get current host\r\n                    // get ips on this host\r\n                    // but for now\r\n                    webInstance.native.bind = window.location.hostname;\r\n                }\r\n\r\n                webInstance && this.setState({ webInstanceHost: webInstance.native.bind  + ':' + (webInstance.native.port || 8082)});\r\n            });\r\n    }\r\n\r\n    renderMessage() {\r\n        if (this.state.message) {\r\n            return (<MessageDialog text={this.state.message} onClose={() => this.setState({message: ''})}/>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (state.instanceAlive !== props.instanceAlive) {\r\n            return {instanceAlive: props.instanceAlive};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    onTest() {\r\n        const settings = JSON.parse(this.editedSettings || this.editedSettingsOld);\r\n        COMMON_ATTRS.forEach(attr => settings[attr] = this.props.native.cameras[this.state.editCam][attr]);\r\n\r\n        let timeout = setTimeout(() => {\r\n            timeout = null;\r\n            this.setState({message: 'Timeout', requesting: false});\r\n        }, settings.timeout || this.props.native.defaultTimeout);\r\n\r\n        this.setState({requesting: true}, () => {\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'test', settings, result => {\r\n                timeout && clearTimeout(timeout);\r\n                if (!result || !result.body || result.error) {\r\n                    let error = (result && result.error) ? result.error : I18n.t('No answer');\r\n                    if (typeof error !== 'string') {\r\n                        error = JSON.stringify(error);\r\n                    }\r\n                    this.setState({message: error, requesting: false});\r\n                } else {\r\n                    this.setState({testImg: result.body, requesting: false});\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    renderConfigDialog() {\r\n        if (this.state.editCam !== false) {\r\n            const cam = this.props.native.cameras[this.state.editCam];\r\n            let Config = (TYPES[cam.type] || TYPES.url).Config;\r\n\r\n            return (<Dialog\r\n                maxWidth=\"lg\"\r\n                fullWidth={true}\r\n                open={true}\r\n                onClose={() => this.state.editCam !== null && this.setState({editCam: false, editChanged: false})}\r\n            >\r\n                <DialogTitle>{I18n.t('Edit camera %s [%s]', cam.name, cam.type)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className={this.props.classes.divConfig}>\r\n                        <Config\r\n                            settings={cam}\r\n                            onChange={settings => {\r\n                                this.editedSettings = JSON.stringify(settings);\r\n                                if (this.editedSettingsOld === this.editedSettings && this.state.editChanged) {\r\n                                    this.setState({editChanged: false});\r\n                                } else if (this.editedSettingsOld !== this.editedSettings && !this.state.editChanged) {\r\n                                    this.setState({editChanged: true});\r\n                                }\r\n                            }}\r\n                            encrypt={(value, cb) =>\r\n                                this.props.encrypt(value, cb)}\r\n                            decrypt={(value, cb) =>\r\n                                this.props.decrypt(value, cb)}\r\n                        />\r\n                        <div className={ this.props.classes.sampleUrl } >{ I18n.t('Local URL') }: <a href={ `http://${this.props.native.bind}:${this.props.native.port}/${cam.name}?key=${ this.props.native.key }` } target=\"_blank\" rel=\"noopener noreferrer\">URL: http://{ this.props.native.bind }:{this.props.native.port }/{ cam.name }?key={ this.props.native.key }</a></div>\r\n                        <div className={ this.props.classes.sampleUrl } >{ I18n.t('Web URL') }: <a href={ `http://${this.state.webInstanceHost}/${this.props.adapterName}.${this.props.instance}/${cam.name}` } target=\"_blank\" rel=\"noopener noreferrer\">URL: http://{ this.state.webInstanceHost }/{ this.props.adapterName }.{ this.props.instance }/{ cam.name }</a></div>\r\n                    </div>\r\n                <div className={this.props.classes.divTestCam}>\r\n                    <Button\r\n                        disabled={this.state.requesting || !this.state.instanceAlive}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={this.props.classes.buttonTest}\r\n                        onClick={() => this.onTest()}\r\n                        startIcon={<IconTest />}\r\n                    >{I18n.t('Test')}</Button>\r\n                    {this.state.testImg ? (<img alt=\"test\" className={this.props.classes.imgTest} src={this.state.testImg} />) : null}\r\n                </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        disabled={!this.state.editChanged}\r\n                        onClick={() => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        if (this.editedSettings) {\r\n                            const oldValue = cameras[this.state.editCam];\r\n                            cameras[this.state.editCam] = JSON.parse(this.editedSettings);\r\n                            COMMON_ATTRS.forEach(attr => cameras[this.state.editCam][attr] = oldValue[attr]);\r\n                            this.props.onChange('cameras', cameras, () => this.setState({editCam: false, editChanged: false}));\r\n                        } else {\r\n                            this.setState({editCam: false, editChanged: false});\r\n                        }\r\n                    }} color=\"primary\" >{I18n.t('Apply')}</Button>\r\n                    <Button onClick={() => this.setState({editCam: false, editChanged: false})}>{I18n.t('Cancel')}</Button>\r\n                </DialogActions>\r\n            </Dialog>);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderCameraButtons(cam, i) {\r\n        return [\r\n            <Fab\r\n                size=\"small\"\r\n                key=\"edit\"\r\n                className={this.props.classes.lineEdit}\r\n                onClick={() => {\r\n                    this.editedSettingsOld = JSON.parse(JSON.stringify(this.props.native.cameras[i]));\r\n                    COMMON_ATTRS.forEach(attr => {\r\n                        console.log('delete ' + attr);\r\n                        delete this.editedSettingsOld[attr];\r\n                    });\r\n                    this.editedSettingsOld = JSON.stringify(this.editedSettingsOld);\r\n                    this.setState({editCam: i});\r\n                }}>\r\n                    <IconEdit className={ this.props.classes.buttonIcon }/>\r\n            </Fab>,\r\n\r\n            i ?\r\n                <Fab\r\n                    size=\"small\"\r\n                    key=\"up\"\r\n                    className={this.props.classes.lineUp}\r\n                    onClick={() => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        const cam = cameras[i];\r\n                        cameras.splice(i, 1);\r\n                        cameras.splice(i - 1, 0, cam);\r\n                        this.props.onChange('cameras', cameras);\r\n                    }}>\r\n                    <IconUp className={ this.props.classes.buttonIcon }/>\r\n                </Fab>\r\n                :\r\n                <div key=\"upEmpty\" className={this.props.classes.lineNoButtonUp}>&nbsp;</div>,\r\n\r\n            i !== this.props.native.cameras.length - 1 ?\r\n                <Fab\r\n                    size=\"small\"\r\n                    key=\"down\"\r\n                    className={this.props.classes.lineDown}\r\n                    onClick={() => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        const cam = cameras[i];\r\n                        cameras.splice(i, 1);\r\n                        cameras.splice(i + 1, 0, cam);\r\n                        this.props.onChange('cameras', cameras);\r\n                    }}>\r\n                    <IconDown  className={ this.props.classes.buttonIcon }/>\r\n                </Fab>\r\n                :\r\n                <div key=\"downEmpty\" className={this.props.classes.lineNoButtonDown}>&nbsp;</div>,\r\n\r\n            <Fab\r\n                size=\"small\"\r\n                key=\"delete\"\r\n                className={this.props.classes.lineDelete}\r\n                onClick={() => {\r\n                    const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                    cameras.splice(i, 1);\r\n                    this.props.onChange('cameras', cameras);\r\n                }}>\r\n                    <IconDelete className={ this.props.classes.buttonIcon }/>\r\n            </Fab>\r\n        ];\r\n    }\r\n\r\n    renderCamera(cam, i) {\r\n        const error = this.props.native.cameras.find((c, ii) => c.name === cam.name && ii !== i);\r\n        this.props.native.cameras.forEach((cam, i) => {\r\n            if (!cam.id) {\r\n                cam.id = Date.now() + i;\r\n            }\r\n        });\r\n\r\n        let description = cam.url || '';\r\n        if (description) {\r\n            // remove password\r\n            const m = description.match(/^https?:\\/\\/([^@]+)@/);\r\n            if (m && m[1]) {\r\n                description = description.replace(m[1] + '@', '');\r\n            }\r\n        }\r\n\r\n        return (<div key={ 'cam' + cam.id } className={ this.props.classes.lineDiv }>\r\n            <div className={ this.props.classes.lineText }>\r\n                <TextField\r\n                    className={ this.props.classes.name }\r\n                    label={ I18n.t('Name') }\r\n                    error={ error }\r\n                    value={ cam.name }\r\n                    helperText={ error ? I18n.t('Duplicate name') : '' }\r\n                    onChange={ e => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        cameras[i].name = e.target.value.replace(/[^-_\\da-zA-Z]/g, '_');\r\n                        this.props.onChange('cameras', cameras);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={ this.props.classes.lineDesc }>\r\n                <TextField\r\n                    className={this.props.classes.desc}\r\n                    label={I18n.t('Description')}\r\n                    value={cam.desc}\r\n                    onChange={e => {\r\n                        const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                        cameras[i].desc = e.target.value;\r\n                        this.props.onChange('cameras', cameras);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={this.props.classes.lineType}>\r\n                <FormControl className={this.props.classes.type}>\r\n                    <InputLabel>{I18n.t('Type')}</InputLabel>\r\n                    <Select\r\n                        value={cam.type}\r\n                        onChange={e => {\r\n                            const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                            cameras[i].type = e.target.value;\r\n                            this.props.onChange('cameras', cameras);\r\n                        }}\r\n                    >\r\n                        {Object.keys(TYPES).map(type => (<MenuItem key={ type } value={ type }>{TYPES[type].name || type}</MenuItem>))}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            { this.renderCameraButtons(cam, i) }\r\n            {description ? <div className={ this.props.classes.lineUrl }>{ description }</div> : null }\r\n        </div>);\r\n    }\r\n\r\n    render() {\r\n        return <div className={this.props.classes.tab}>\r\n            <Fab size=\"small\" onClick={() => {\r\n                const cameras = JSON.parse(JSON.stringify(this.props.native.cameras));\r\n                let i = 1;\r\n                // eslint-disable-next-line\r\n                while(cameras.find(cam => cam.name === 'cam' + i)) {\r\n                    i++;\r\n                }\r\n                cameras.push({name: 'cam' + i, type: 'url', id: Date.now()});\r\n                this.props.onChange('cameras', cameras);\r\n            }}><IconAdd /></Fab>\r\n            { this.props.native.cameras ? this.props.native.cameras.map((cam, i) => this.renderCamera(cam, i)) : null }\r\n            { this.renderConfigDialog() }\r\n            { this.renderMessage() }\r\n        </div>;\r\n    }\r\n}\r\n\r\nServer.propTypes = {\r\n    decrypt: PropTypes.func.isRequired,\r\n    encrypt: PropTypes.func.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Server);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabCameras from './Tabs/Cameras';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {};\r\n        extendedProps.encryptedFields = ['password'];\r\n        extendedProps.adapterName = 'cameras';\r\n        extendedProps.doNotLoadAllObjects = true;\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.socket.subscribeState(this.instanceId + '.alive', (id, state) => {\r\n            if (id) {\r\n                if (this.state.alive !== (state ? state.val : false)) {\r\n                    this.setState({alive: state ? state.val : false});\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // called when connected with admin and loaded instance object\r\n    onConnectionReady() {\r\n        this.socket.getState(this.instanceId + '.alive')\r\n            .then(state => {\r\n                if (this.state.alive !== (state ? state.val : false)) {\r\n                    this.setState({alive: state ? state.val : false});\r\n                }\r\n\r\n                // generate random key\r\n                if (!this.state.native.key) {\r\n                    setTimeout(() => this.updateNativeValue('key', (Math.round(Math.random() * 100000000000) / 100000).toFixed(6)));\r\n                }\r\n            });\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'cameras') {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return (<Loader theme={this.state.themeType}/>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <AppBar position=\"static\">\r\n                    <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                        <Tab selected={this.state.selectedTab === 'options'} label={I18n.t('Options')} data-name=\"options\" />\r\n                        <Tab selected={this.state.selectedTab === 'cameras'} label={I18n.t('Cameras')} data-name=\"cameras\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n\r\n                <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                    {(this.state.selectedTab === 'options' || !this.state.selectedTab) && (<TabOptions\r\n                        key=\"options\"\r\n                        common={this.common}\r\n                        socket={this.socket}\r\n                        native={this.state.native}\r\n                        encrypt={(value, cb) => cb(this.encrypt(value))}\r\n                        decrypt={(value, cb) => cb(this.decrypt(value))}\r\n                        onError={text => this.setState({errorText: text})}\r\n                        onLoad={native => this.onLoadConfig(native)}\r\n                        instance={this.instance}\r\n                        getIpAddresses={() => this.getIpAddresses()}\r\n                        getExtendableInstances={() => this.getExtendableInstances()}\r\n                        onConfigError={configError => this.setConfigurationError(configError)}\r\n                        adapterName={this.adapterName}\r\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    />)}\r\n                    {this.state.selectedTab === 'cameras' && (<TabCameras\r\n                        key=\"cameras\"\r\n                        socket={this.socket}\r\n                        adapterName={ this.adapterName }\r\n                        instance={this.instance}\r\n                        encrypt={(value, cb) => cb(this.encrypt(value))}\r\n                        decrypt={(value, cb) => cb(this.decrypt(value))}\r\n                        instanceAlive={this.state.alive}\r\n                        native={this.state.native}\r\n                        onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    />)}\r\n                </div>\r\n                {this.renderError()}\r\n                {this.renderSaveCloseButtons()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport createTheme from '@iobroker/adapter-react/createTheme';\r\n\r\nlet theme = 'light';\r\n\r\nfunction printPrompt() {\r\n    const prompt = `\r\n██╗ ██████╗ ██████╗ ██████╗  ██████╗ ██╗  ██╗███████╗██████╗ \r\n██║██╔═══██╗██╔══██╗██╔══██╗██╔═══██╗██║ ██╔╝██╔════╝██╔══██╗\r\n██║██║   ██║██████╔╝██████╔╝██║   ██║█████╔╝ █████╗  ██████╔╝\r\n██║██║   ██║██╔══██╗██╔══██╗██║   ██║██╔═██╗ ██╔══╝  ██╔══██╗\r\n██║╚██████╔╝██████╔╝██║  ██║╚██████╔╝██║  ██╗███████╗██║  ██║\r\n╚═╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝\r\n`;\r\n    console.log(prompt);\r\n    console.log('Nice to see you here! :) Join our dev community here https://github.com/ioBroker/ioBroker or here https://github.com/iobroker-community-adapters');\r\n    console.log('Help us to create open source project with reactJS!');\r\n    console.log('See you :)');\r\n}\r\n\r\nfunction build() {\r\n    printPrompt();\r\n    return ReactDOM.render(<MuiThemeProvider theme={createTheme(theme)}>\r\n        <App onThemeChange={_theme => {\r\n            theme = _theme;\r\n            build();\r\n        }}/>\r\n    </MuiThemeProvider>, document.getElementById('root'));\r\n}\r\n\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}